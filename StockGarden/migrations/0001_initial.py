# Generated by Django 5.1.5 on 2025-03-20 19:04

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(max_length=50, unique=True)),
                ('customer_name', models.CharField(max_length=255)),
                ('customer_email', models.EmailField(max_length=255)),
                ('customer_address', models.TextField(blank=True, null=True)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('bank_transfer', 'Bank Transfer'), ('mobile_payment', 'Mobile Payment'), ('other', 'Other')], default='cash', max_length=20)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_status', models.CharField(choices=[('Full Payment', 'Full Payment'), ('Partial Payment', 'Partial Payment'), ('Pending', 'Pending'), ('Overdue', 'Overdue')], default='pending', max_length=20)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Invoice',
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=191, unique=True, verbose_name='Brand Name')),
                ('image', models.ImageField(blank=True, null=True, upload_to='media/brands_imgs/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Brand',
                'indexes': [models.Index(fields=['name'], name='StockGarden_name_52f7ab_idx')],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=191, unique=True, verbose_name='Category Name')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Category',
                'indexes': [models.Index(fields=['name'], name='StockGarden_name_4cbcbd_idx')],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=191)),
                ('address', models.CharField(max_length=191)),
                ('email', models.EmailField(max_length=191)),
                ('phone_number', models.CharField(db_index=True, max_length=20)),
                ('logo', models.ImageField(blank=True, upload_to='company/logos/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Company',
                'indexes': [models.Index(fields=['name', 'phone_number'], name='StockGarden_name_f91e02_idx')],
            },
        ),
        migrations.CreateModel(
            name='ExpenseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=191, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Expense Category',
                'indexes': [models.Index(fields=['name'], name='StockGarden_name_701d64_idx')],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=191, verbose_name='Product Name')),
                ('description', models.TextField(blank=True, max_length=191, null=True)),
                ('price', models.DecimalField(db_index=True, decimal_places=2, max_digits=10, verbose_name='Product Price')),
                ('Imei', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('image', models.ImageField(blank=True, db_index=True, null=True, upload_to='media/products_imgs/')),
                ('stock', models.IntegerField(blank=True, db_index=True, null=True)),
                ('slug', models.SlugField(blank=True, max_length=191, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='StockGarden.brand')),
                ('categories', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='StockGarden.category')),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.user')),
            ],
            options={
                'verbose_name': 'Product',
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(blank=True, db_index=True, max_length=191, null=True)),
                ('condition', models.CharField(choices=[('new', 'New'), ('like_new', 'Like New'), ('good', 'Good'), ('needs_repair', 'Needs Repair')], db_index=True, default='new', max_length=20)),
                ('description', models.TextField(blank=True, max_length=191, null=True)),
                ('Imei', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='media/products_imgs/')),
                ('price', models.IntegerField()),
                ('quantity', models.IntegerField()),
                ('remaining_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='StockGarden.brand')),
                ('categories', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='StockGarden.category')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.user')),
            ],
            options={
                'verbose_name': 'Purchase',
            },
        ),
        migrations.CreateModel(
            name='Repair',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('product_name', models.CharField(max_length=100)),
                ('device_model', models.CharField(max_length=100)),
                ('issue_description', models.TextField()),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('bank_transfer', 'Bank Transfer'), ('mobile_payment', 'Mobile Payment'), ('other', 'Other')], default='cash', max_length=20)),
                ('payment_status', models.CharField(choices=[('Full Payment', 'Full Payment'), ('Partial Payment', 'Partial Payment'), ('Pending', 'Pending'), ('Overdue', 'Overdue')], default='Pending', max_length=191)),
                ('notes', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('in-progress', 'In Progress'), ('completed', 'Completed'), ('pending', 'Pending Pickup')], default='in-progress', max_length=20)),
                ('out_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.user', verbose_name='Customer Name')),
            ],
            options={
                'verbose_name': 'Repair',
            },
        ),
        migrations.CreateModel(
            name='RepairDetail',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('repair_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fixed_description', models.TextField()),
                ('repair_action', models.CharField(choices=[('in', 'In'), ('repairing', 'Repairing'), ('repaired', 'Repaired'), ('returned', 'Returned')], max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('repair_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repair_details', to='StockGarden.repair')),
            ],
            options={
                'verbose_name': 'Repair Detail',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Total_sells', models.IntegerField(blank=True, db_index=True, null=True)),
                ('Total_purchase', models.IntegerField(blank=True, db_index=True, null=True)),
                ('Total_Stock', models.IntegerField(blank=True, db_index=True, null=True)),
                ('Low_Stock', models.IntegerField(blank=True, db_index=True, null=True)),
                ('Empty_Stock', models.IntegerField(blank=True, db_index=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Report',
                'indexes': [models.Index(fields=['Total_sells', 'Total_purchase', 'Total_Stock', 'Low_Stock', 'Empty_Stock'], name='StockGarden_Total_s_745b29_idx')],
            },
        ),
        migrations.CreateModel(
            name='Return',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_returned', models.PositiveIntegerField()),
                ('reason', models.TextField(blank=True, null=True)),
                ('return_date', models.DateTimeField(auto_now_add=True)),
                ('refund_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StockGarden.invoice')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StockGarden.product')),
            ],
            options={
                'verbose_name': 'Product Return',
            },
        ),
        migrations.CreateModel(
            name='Sales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Imei', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('quantity', models.IntegerField(default=1)),
                ('price', models.IntegerField()),
                ('discount', models.IntegerField(blank=True, default=0, null=True)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('bank_transfer', 'Bank Transfer'), ('mobile_payment', 'Mobile Payment'), ('other', 'Other')], default='cash', max_length=20)),
                ('payment_status', models.CharField(choices=[('Full Payment', 'Full Payment'), ('Partial Payment', 'Partial Payment'), ('Pending', 'Pending'), ('Overdue', 'Overdue')], default='Pending', max_length=191)),
                ('total_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('remaining_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('expiring_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Sale Date')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.user', verbose_name='Party Name')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StockGarden.product')),
            ],
            options={
                'verbose_name': 'Seller',
            },
        ),
        migrations.AddField(
            model_name='invoice',
            name='sales',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StockGarden.sales'),
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('description', models.TextField(blank=True, null=True)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('bank_transfer', 'Bank Transfer'), ('mobile_payment', 'Mobile Payment'), ('other', 'Other')], db_index=True, default='cash', max_length=20)),
                ('payment_status', models.CharField(choices=[('Full Payment', 'Full Payment'), ('Partial Payment', 'Partial Payment'), ('Pending', 'Pending'), ('Overdue', 'Overdue')], db_index=True, default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='StockGarden.expensecategory')),
            ],
            options={
                'verbose_name': 'Expense',
                'indexes': [models.Index(fields=['amount', 'payment_status'], name='StockGarden_amount_9ddf6a_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name', 'description', 'price', 'image', 'categories', 'stock', 'brand'], name='StockGarden_name_17b859_idx'),
        ),
        migrations.AddIndex(
            model_name='purchase',
            index=models.Index(fields=['vendor', 'brand', 'categories', 'product_name'], name='StockGarden_vendor__51895c_idx'),
        ),
        migrations.AddIndex(
            model_name='repair',
            index=models.Index(fields=['product_name', 'device_model', 'status'], name='StockGarden_product_f89005_idx'),
        ),
        migrations.AddIndex(
            model_name='repairdetail',
            index=models.Index(fields=['repair_order', 'repair_action'], name='StockGarden_repair__0d18aa_idx'),
        ),
        migrations.AddIndex(
            model_name='return',
            index=models.Index(fields=['return_date'], name='StockGarden_return__332b87_idx'),
        ),
        migrations.AddIndex(
            model_name='sales',
            index=models.Index(fields=['name', 'product', 'price'], name='StockGarden_name_id_1b6e84_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['invoice_number', 'due_date'], name='StockGarden_invoice_42f23e_idx'),
        ),
    ]
